File Paths:
./tests/cli_test.rs
./src/prompt_handling.rs
./src/git.rs
./src/validation.rs
./src/output.rs
./src/main.rs
./src/file_processing.rs
./src/cli.rs
./src/summary.rs

File Summaries:


Summary of ./tests/cli_test.rs:

/*
[DIRSCRIBE]
Runs dirscribe command to generate output and compares it with ground truth. Tests for regular and diff-only modes.
Defined: setup,test_dirscribe_output_matches_ground_truth,test_dirscribe_diff_only_output_matches_ground_truth,INIT
Used: std::process::Command,std::fs,similar::ChangeTag,similar::TextDiff,std::sync::Once
[/DIRSCRIBE]
*/

Summary of ./src/prompt_handling.rs:

/*
[DIRSCRIBE]
Loads prompt files from a directory into a HashMap, mapping file names to file contents.
Defined: load_prompts
Used: std::collections::HashMap,std::fs
[/DIRSCRIBE]
*/

Summary of ./src/git.rs:

/*
[DIRSCRIBE]
Provides functionality to get a list of changed files and their diffs between two Git commits or the working directory and a commit. Also includes a function to filter the diff output for a specific file.
Defined: get_diff_list,get_diff_str,filter_diff_for_file,get_tree
Used: io,Path,PathBuf,Repository,Tree,Diff,DiffFormat
[/DIRSCRIBE]
*/

Summary of ./src/validation.rs:

/*
[DIRSCRIBE]
Validates CLI arguments, paths, git-related arguments, keywords, and path filters for a command-line tool.
Defined: ValidationError,validate_cli_args,validate_suffixes,validate_template_path,validate_output_path,validate_git_args,validate_commit,validate_keywords,validate_path_filters
Used: std::path::{Path,PathBuf},crate::cli::Cli,git2::Repository,anyhow::Result,std::error::Error,std::fmt
[/DIRSCRIBE]
*/

Summary of ./src/output.rs:

/*
[DIRSCRIBE]
Provides functionality to write content to the system clipboard and process content with a template file.
Defined: write_to_clipboard,process_with_template,fs,anyhow,Result,bail,clipboard,ClipboardContext,ClipboardProvider
Used: std,anyhow,clipboard
[/DIRSCRIBE]
*/

Summary of ./src/main.rs:

/*
[DIRSCRIBE]
Summarizes code files in a directory based on specified filters and prompts, and outputs the summary to a file or clipboard.
Defined: std::fs::File,cli,git,file_processing,output,prompt_handling,summary,validation,Cli,process_directory,write_to_clipboard,process_with_template,Parser,validate_cli_args,Result,Context,Write,PathBuf,load_prompts
Used: std::fs::File,cli::Cli,file_processing::process_directory,output::write_to_clipboard,output::process_with_template,clap::Parser,validation::validate_cli_args,anyhow::Result,anyhow::Context,std::io::Write,std::path::PathBuf,prompt_handling::load_prompts
[/DIRSCRIBE]
*/

Summary of ./src/file_processing.rs:

/*
[DIRSCRIBE]
This code provides functionality for processing directories and files, including generating summaries or diffs, applying summaries to files, and filtering files based on various criteria.
Defined: process_directory,check_summary,check_prefix,get_summaries_from_files,filter_dirscribe_sections,write_summary_to_file,process_file,check_for_keywords,is_likely_text_file,create_comment_map
Used: std::fs,std::io,anyhow,std::path,ignore::WalkBuilder,std::collections::HashMap,git2,crate::git,crate::summary
[/DIRSCRIBE]
*/

Summary of ./src/cli.rs:

/*
[DIRSCRIBE]
Rust command-line tool for managing file summaries based on extensions, paths, keywords, and Git diffs. Supports summarizing, applying, and retrieving summaries.
Defined: Cli,suffixes,prompt_template_path,output_path,dont_use_gitignore,summarize,apply,retrieve,exclude_paths,include_paths,or_keywords,and_keywords,exclude_keywords,diff_only,start_commit_id,end_commit_id
Used: clap::Parser
[/DIRSCRIBE]
*/

Summary of ./src/summary.rs:

/*
[DIRSCRIBE]
This Rust code provides a unified client for interacting with different language model providers (Deepseek, Anthropic, and Ollama). It handles API requests, response parsing, and retries for failed requests. The main functionality is to send chat messages to the providers and receive responses.

Defined: Provider,Message,ProviderRequest,DeepseekRequest,AnthropicRequest,OllamaRequest,UnifiedResponse,UnifiedClient,MAX_CONCURRENT_REQUESTS,ANTHROPIC_MAX_TOKENS,ANTHROPIC_TEMPERATURE,MAX_RETRIES,INITIAL_BACKOFF_MS,new,build_headers,build_request,parse_response,chat,get_summaries
Used: reqwest,serde,tokio,anyhow,std,std,std,tokio,std,anyhow
[/DIRSCRIBE]
*/
